{
  "timestamp": 1756003524.4198954,
  "overall_passed": false,
  "overall_score": 0.7963434532061983,
  "passed_gates": 6,
  "total_gates": 9,
  "pass_rate": 0.6666666666666666,
  "gate_results": [
    {
      "gate_name": "Code Structure",
      "passed": true,
      "score": 1.0,
      "threshold": 0.9,
      "execution_time": 0.00017833709716796875,
      "details": {
        "required_dirs": [
          "graph_hypernetwork_forge",
          "graph_hypernetwork_forge/models",
          "graph_hypernetwork_forge/utils",
          "graph_hypernetwork_forge/data",
          "tests",
          "scripts",
          "docs"
        ],
        "existing_dirs": [
          "graph_hypernetwork_forge",
          "graph_hypernetwork_forge/models",
          "graph_hypernetwork_forge/utils",
          "graph_hypernetwork_forge/data",
          "tests",
          "scripts",
          "docs"
        ],
        "missing_dirs": []
      },
      "error_message": null
    },
    {
      "gate_name": "Python Syntax",
      "passed": true,
      "score": 1.0,
      "threshold": 0.95,
      "execution_time": 0.4183349609375,
      "details": {
        "total_files": 99,
        "valid_files": 99,
        "syntax_errors": []
      },
      "error_message": null
    },
    {
      "gate_name": "Import Structure",
      "passed": true,
      "score": 1.0,
      "threshold": 0.8,
      "execution_time": 0.0012595653533935547,
      "details": {
        "core_modules": [
          "graph_hypernetwork_forge/__init__.py",
          "graph_hypernetwork_forge/models/__init__.py",
          "graph_hypernetwork_forge/utils/__init__.py",
          "graph_hypernetwork_forge/data/__init__.py"
        ],
        "working_imports": 4,
        "import_errors": []
      },
      "error_message": null
    },
    {
      "gate_name": "Documentation",
      "passed": true,
      "score": 1.0,
      "threshold": 0.75,
      "execution_time": 0.0003304481506347656,
      "details": {
        "required_docs": [
          "README.md",
          "CONTRIBUTING.md",
          "LICENSE",
          "CHANGELOG.md"
        ],
        "existing_docs": [
          "README.md",
          "CONTRIBUTING.md",
          "LICENSE",
          "CHANGELOG.md"
        ],
        "doc_quality": {
          "README.md": {
            "length": 8443,
            "lines": 284,
            "has_content": true
          },
          "CONTRIBUTING.md": {
            "length": 1684,
            "lines": 56,
            "has_content": true
          },
          "LICENSE": {
            "length": 1071,
            "lines": 21,
            "has_content": true
          },
          "CHANGELOG.md": {
            "length": 986,
            "lines": 42,
            "has_content": true
          }
        }
      },
      "error_message": null
    },
    {
      "gate_name": "Configuration",
      "passed": true,
      "score": 1.0,
      "threshold": 0.8,
      "execution_time": 0.00010323524475097656,
      "details": {
        "required_configs": [
          "pyproject.toml",
          "requirements.txt"
        ],
        "existing_configs": [
          "pyproject.toml",
          "requirements.txt"
        ],
        "config_quality": {
          "pyproject.toml": {
            "length": 4431,
            "has_content": true,
            "has_build_system": true,
            "has_project": true
          },
          "requirements.txt": {
            "length": 186,
            "has_content": true,
            "num_dependencies": 11
          }
        }
      },
      "error_message": null
    },
    {
      "gate_name": "Test Coverage",
      "passed": false,
      "score": 0.17647058823529413,
      "threshold": 0.3,
      "execution_time": 0.006385087966918945,
      "details": {
        "test_files": [
          "tests/test_advanced_features.py",
          "tests/test_data.py",
          "tests/test_integration_complete.py",
          "tests/test_models.py",
          "tests/test_performance.py",
          "tests/test_quality_gates.py",
          "tests/test_security.py",
          "tests/test_utils.py",
          "tests/integration/test_end_to_end.py"
        ],
        "source_files_count": 51,
        "test_files_count": 9,
        "coverage_ratio": 0.17647058823529413
      },
      "error_message": null
    },
    {
      "gate_name": "Security Basics",
      "passed": false,
      "score": 0.5,
      "threshold": 0.9,
      "execution_time": 0.016832828521728516,
      "details": {
        "security_issues": [
          {
            "file": "generation_1_demo.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "production_test_suite.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "quality_gates_validator.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "simple_hypergnn_demo.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "autonomous_quality_gates.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "autonomous_quality_gates.py",
            "pattern": "exec(",
            "description": "Use of exec() function"
          },
          {
            "file": "autonomous_quality_gates.py",
            "pattern": "subprocess.call(",
            "description": "Direct subprocess call without validation"
          },
          {
            "file": "autonomous_quality_gates.py",
            "pattern": "os.system(",
            "description": "Use of os.system()"
          },
          {
            "file": "autonomous_quality_gates.py",
            "pattern": "shell=True",
            "description": "Shell injection risk"
          },
          {
            "file": "examples/cross_domain_transfer.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "examples/knowledge_graph_completion.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "examples/research_experiments.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "scripts/benchmark.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "scripts/demo.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "scripts/deployment_check.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "scripts/evaluate.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "tests/test_integration_complete.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "tests/test_quality_gates.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/models/hypergnn.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/models/self_evolving_hypernetworks.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/research/experimental_framework.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/distributed_training.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/federated_learning.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/health_checks.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/monitoring.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/optimization.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/performance_optimizer.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/scalable_processing.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/training.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          },
          {
            "file": "graph_hypernetwork_forge/utils/distributed_optimization.py",
            "pattern": "eval(",
            "description": "Use of eval() function"
          }
        ],
        "files_scanned": 99
      },
      "error_message": null
    },
    {
      "gate_name": "Performance Readiness",
      "passed": false,
      "score": 0.5714285714285714,
      "threshold": 0.6,
      "execution_time": 0.0046977996826171875,
      "details": {
        "optimization_files": [
          "graph_hypernetwork_forge/utils/optimization.py",
          "graph_hypernetwork_forge/utils/distributed_optimization.py",
          "graph_hypernetwork_forge/utils/advanced_resilience.py"
        ],
        "existing_optimizations": 3,
        "performance_indicators": [
          "graph_hypernetwork_forge/utils/optimization.py",
          "graph_hypernetwork_forge/utils/distributed_optimization.py",
          "graph_hypernetwork_forge/utils/advanced_resilience.py"
        ],
        "pattern_matches": 16,
        "total_patterns_searched": 112
      },
      "error_message": null
    },
    {
      "gate_name": "Resilience Features",
      "passed": true,
      "score": 0.9191919191919191,
      "threshold": 0.7,
      "execution_time": 0.020638704299926758,
      "details": {
        "resilience_files": [
          "graph_hypernetwork_forge/utils/advanced_resilience.py",
          "graph_hypernetwork_forge/utils/exceptions.py",
          "graph_hypernetwork_forge/utils/logging_utils.py",
          "graph_hypernetwork_forge/utils/memory_utils.py"
        ],
        "existing_resilience": 4,
        "resilience_features": [
          "graph_hypernetwork_forge/utils/advanced_resilience.py",
          "graph_hypernetwork_forge/utils/exceptions.py",
          "graph_hypernetwork_forge/utils/logging_utils.py",
          "graph_hypernetwork_forge/utils/memory_utils.py"
        ],
        "pattern_matches": 83,
        "total_files": 99
      },
      "error_message": null
    }
  ]
}